// Lead Management Models
// This file contains all models related to lead generation and management

model Lead {
  id                String    @id @default(cuid())

  // Core fields
  name              String
  company           String?
  email             String?
  phone             String?
  website           String?
  description       String?   @db.Text
  notes             String?   @db.Text

  // Extraction metadata
  rawInput          String?   @db.Text
  extractionMetadata Json?    // {confidence, model, extractedAt, detectedPatterns}
  confidence        Float?    @default(0)

  // Enrichment data
  enrichmentData    Json?     // {companySize, industry, revenue, employees}
  linkedinUrl       String?
  companySize       String?
  industry          String?

  // Status & tracking
  status            LeadStatus @default(NEW)
  score             Int?      @default(0)
  tags              String[]
  source            LeadSource @default(MANUAL)
  priority          Priority  @default(MEDIUM)

  // Relationships
  userId            String
  user              User      @relation("UserLeads", fields: [userId], references: [id])
  assignedTo        String?
  assignedUser      User?     @relation("AssignedLeads", fields: [assignedTo], references: [id])
  interactions      Interaction[]
  history           LeadHistory[]

  // Timestamps
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  lastContactedAt   DateTime?
  nextFollowUp      DateTime?

  // Indexes for performance
  @@index([userId, status])
  @@index([email])
  @@index([company])
  @@index([assignedTo])
  @@index([createdAt(sort: Desc)])
  @@index([status, priority])
  @@index([source])
}

model LeadHistory {
  id        String   @id @default(cuid())
  leadId    String
  lead      Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  action    String   // CREATE, UPDATE, DELETE, STATUS_CHANGE, ASSIGNED, ENRICHED
  changes   Json     // {field: {old, new}}
  userId    String
  user      User     @relation("LeadHistoryUser", fields: [userId], references: [id])
  metadata  Json?    // Additional context for the change
  createdAt DateTime @default(now())

  @@index([leadId])
  @@index([userId])
  @@index([createdAt(sort: Desc)])
}

model Interaction {
  id        String   @id @default(cuid())
  leadId    String
  lead      Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  type      InteractionType
  subject   String?
  content   String   @db.Text
  metadata  Json?    // {duration, outcome, attendees, etc.}
  userId    String
  user      User     @relation("InteractionUser", fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@index([leadId])
  @@index([userId])
  @@index([type])
  @@index([createdAt(sort: Desc)])
}

// Lead-specific Enums
enum LeadStatus {
  NEW
  CONTACTED
  QUALIFIED
  PROPOSAL
  NEGOTIATION
  CLOSED_WON
  CLOSED_LOST
  ARCHIVED
}

enum LeadSource {
  MANUAL
  IMPORT
  API
  WEBSITE
  REFERRAL
  SOCIAL_MEDIA
  EMAIL_CAMPAIGN
  COLD_CALL
  CONFERENCE
  PARTNER
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum InteractionType {
  EMAIL
  CALL
  MEETING
  NOTE
  STATUS_CHANGE
  TASK
  DOCUMENT
}